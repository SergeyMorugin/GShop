//
//  LogInInteractor.swift
//  GShop
//
//  Created by Matthew on 11.03.2021.
//  Copyright (c) 2021 Ostagram Inc.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LogInBusinessLogic {
    func login(request: LogIn.LoginAction.Request)
}

protocol LogInDataStore {
    //var name: String { get set }
}

class LogInInteractor: LogInBusinessLogic, LogInDataStore {
    var presenter: LogInPresentationLogic?
    private let network = RequestFactory().makeAuthRequestFatory()
    // MARK: Do something
    
    func login(request: LogIn.LoginAction.Request) {
        network.login(
            userName: request.login,
            password: request.password, 
            completionHandler: { resp in
                switch resp.result {
                case .success(let model):
                    self.presenter?.present(response: LogIn.LoginAction.Response(success: true))
                case .failure:
                    self.presenter?.present(response: LogIn.LoginAction.Response(success: false))
                }
            }
        )
    }
}
