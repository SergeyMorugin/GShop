//
//  SignUpInteractor.swift
//  GShop
//
//  Created by Matthew on 11.03.2021.
//  Copyright (c) 2021 Ostagram Inc.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SignUpBusinessLogic {
    func signup(request: SignUpEnum.SignUpAction.Request)
}

protocol SignUpDataStore {
    //var name: String { get set }
}

class SignUpInteractor: SignUpBusinessLogic, SignUpDataStore {
    var presenter: SignUpPresentationLogic?
    var worker: SignUpWorker?
    private let network = RequestFactory().makeSignUpRequestFatory()
    //var name: String = ""
    
    // MARK: Do something
    
    func signup(request: SignUpEnum.SignUpAction.Request) {
        network.signUp(
            id: request.id,
            username: request.username,
            password: request.password,
            email: request.email,
            gender: request.gender,
            creditCard: request.creditCard,
            bio: request.bio,
            completionHandler: { resp in
                switch resp.result {
                case .success(let model):
                    self.presenter?.present(response: SignUpEnum.SignUpAction.Response(success: true))
                case .failure:
                    self.presenter?.present(response: SignUpEnum.SignUpAction.Response(success: false))
                }
            }
        )
    }
}
