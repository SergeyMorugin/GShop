//
//  ProductInteractor.swift
//  GShop
//
//  Created by Matthew on 22.03.2021.
//  Copyright (c) 2021 Ostagram Inc.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductBusinessLogic {
    func fetchProductInfo(request: ProductModel.Fetch.Request)
    func fetchProductReviews(request: ProductModel.Fetch.Request)
}

protocol ProductDataStore {
    //var name: String { get set }
    var productId: Int? {get set}
}

class ProductInteractor: ProductBusinessLogic, ProductDataStore
{
    var productId: Int?
    var presenter: ProductPresentationLogic?
    var productWorker: GetGoodByIdRequestFactory?
    var reviewWorker: ReviewsIndexRequestFactory?
    
    // MARK: Do something
    
    func fetchProductInfo(request: ProductModel.Fetch.Request) {
        guard let productId = self.productId else { return }
        productWorker?.getGoodById(
            productId: productId,
            completionHandler: { resp in
                switch resp.result {
                case .success(let model):
                    self.presenter?.present(response: .successProductInfo(model))
                case .failure:
                    self.presenter?.present(response: .failure)
                }
            }
        )
    }
    
    func fetchProductReviews(request: ProductModel.Fetch.Request) {
        guard let productId = self.productId else { return }
        reviewWorker?.reviewsIndex(
            page: 0,
            perPage: 100,
            completionHandler: { resp in
                switch resp.result {
                case .success(let model):
                    self.presenter?.present(response: .successProductReviews(model.items))
                case .failure:
                    self.presenter?.present(response: .failure)
                }
            }
        )
    }

}
