//
//  ProductsPresenter.swift
//  GShop
//
//  Created by Matthew on 18.03.2021.
//  Copyright (c) 2021 Ostagram Inc.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductsPresentationLogic {
    func presentAddToCart(response: Products.AddToCart.Response)
    func presentFetchProducts(response: Products.Show.Response)
}

class ProductsPresenter: ProductsPresentationLogic {
    weak var viewController: ProductsDisplayLogic?
    
    // MARK: Do something
    func presentAddToCart(response: Products.AddToCart.Response) {
        DispatchQueue.main.async {
            switch response {
            case .success:
                let viewModel = Products.ViewModel(
                    showModal: true,
                    textMessage: "Added the item to your cart",
                    items: nil)
                self.viewController?.updateScene(viewModel: viewModel)
            case .failure:
                let viewModel = Products.ViewModel(
                    showModal: true,
                    textMessage: "Fail adding the item to your cart",
                    items: nil)
                self.viewController?.updateScene(viewModel: viewModel)
            }
        }
    }
    
    func presentFetchProducts(response: Products.Show.Response) {
        DispatchQueue.main.async {
            switch response {
            case .success(let items):
                let viewModel = Products.ViewModel(
                    showModal: false,
                    textMessage: "",
                    items: items)
                self.viewController?.updateScene(viewModel: viewModel)
            case .failure:
                let viewModel = Products.ViewModel(
                    showModal: true,
                    textMessage: "Fail fetch products",
                    items: [])
                self.viewController?.updateScene(viewModel: viewModel)
            }
        }
    }
}
